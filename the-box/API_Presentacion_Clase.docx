# Presentación del API E-commerce: THE BOX

## 1. Introducción
THE BOX es una solución fullstack de e-commerce que incluye:
- Un backend API desarrollado en ASP.NET Core.
- Un frontend SPA (Single Page Application) en React + Vite.

El objetivo es ofrecer una plataforma moderna, minimalista y fácil de usar para la gestión de productos, categorías, usuarios y acceso exclusivo mediante QR.

**[Espacio para imagen: Logo del proyecto o portada]**

---

## 2. Arquitectura General
- Backend: ASP.NET Core API (C#)
- Frontend: React + Vite (JavaScript)
- Base de datos: SQL Server
- Autenticación: JWT (JSON Web Tokens)
- Funcionalidades clave: CRUD de productos/categorías, autenticación, recuperación de contraseña, generación y validación de QR.

**[Espacio para imagen: Diagrama de arquitectura]**

---

## 3. Endpoints Principales del API
| Recurso         | Método | Endpoint                        | Descripción                                 |
|-----------------|--------|----------------------------------|---------------------------------------------|
| Auth            | POST   | /api/auth/login                 | Login de usuario                            |
|                 | POST   | /api/auth/register              | Registro de usuario                         |
|                 | POST   | /api/auth/forgot-password       | Solicitar recuperación de contraseña        |
|                 | POST   | /api/auth/reset-password        | Resetear contraseña                         |
| Productos       | GET    | /api/products                   | Listar productos (paginado, filtrado)       |
|                 | GET    | /api/products/{id}              | Detalle de producto                         |
|                 | POST   | /api/products                   | Crear producto                              |
|                 | PUT    | /api/products/{id}              | Editar producto                             |
|                 | DELETE | /api/products/{id}              | Eliminar producto                           |
| Categorías      | GET    | /api/categories                 | Listar categorías                           |
|                 | POST   | /api/categories                 | Crear categoría                             |
| QR (Box Club)   | POST   | /api/qr/generate                | Generar token QR                            |
|                 | POST   | /api/qr/validate                | Validar token QR                            |

**[Espacio para imagen: Captura de Postman mostrando un endpoint]**

---

## 4. Flujo de Autenticación
1. El usuario se registra o inicia sesión.
2. El backend responde con un JWT y datos del usuario.
3. El frontend almacena el token y lo usa en las siguientes peticiones (en el header Authorization).
4. El API valida el token en cada endpoint protegido.

**[Espacio para imagen: Diagrama de flujo de autenticación]**

---

## 5. Ejemplo de Consumo (Login)
**Request:**
POST /api/auth/login
{
  "email": "usuario@ejemplo.com",
  "password": "123456"
}

**Response:**
{
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
  "email": "usuario@ejemplo.com",
  "userName": "usuario"
}

**[Espacio para imagen: Captura de Postman con la respuesta]**

---

## 6. Seguridad
- Contraseñas hasheadas y nunca almacenadas en texto plano.
- JWT con expiración.
- Endpoints protegidos por roles (admin/usuario).
- Recuperación de contraseña vía email (SMTP configurado).

**[Espacio para imagen: Diagrama o icono de seguridad]**

---

## 7. Funcionalidad Destacada: QR (Box Club)
- Los usuarios pueden generar un QR único desde el frontend.
- El QR contiene un token que se valida en el backend.
- Al escanear y validar el QR, se da acceso exclusivo a una página especial.

**[Espacio para imagen: Captura de la pantalla de QR en el frontend]**

---

## 8. Integración con el Frontend
- El frontend consume el API usando fetch/axios.
- Manejo de errores y mensajes claros para el usuario.
- Navegación fluida y sin recargas de página.

**[Espacio para imagen: Pantalla del frontend mostrando productos o login]**

---

## 9. Demostración en Vivo
1. Registro e inicio de sesión.
2. CRUD de productos y categorías.
3. Recuperación de contraseña.
4. Generación y validación de QR.
5. Visualización de la experiencia de usuario en el frontend.

**[Espacio para imagen: Collage de capturas de la demo]**

---

## 10. Código y Documentación
- El código está disponible en un solo repositorio para facilitar la colaboración.
- Incluye scripts SQL para poblar la base de datos y un README detallado para onboarding.

**[Espacio para imagen: Captura del repositorio o README]**

---

## 11. Preguntas y Respuestas

**[Espacio para imagen: Icono de preguntas o interacción]** 